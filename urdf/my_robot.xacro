<?xml version = "1.0"?>
<robot name = "my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    
    <xacro:property name = "base_width" value = "0.6" />
    <xacro:property name = "base_length" value = "0.4" />
    <xacro:property name = "base_height" value = "0.2" />

    <xacro:property name = "wheel_radius" value = "0.1" />
    <xacro:property name = "wheel_length" value = "0.05" />


    <xacro:macro name = "wheel_link" params = "prefix">
        <link name = "${prefix}_wheel_link">
            <visual>
                <geometry>
                    <cylinder radius = "${wheel_radius}" length = "${wheel_length}" /> 
                </geometry>
                <origin xyz = "0 0 0" rpy = "${pi/2} 0 0" />
                <material name = "black" />
            </visual>

            <collision>
                <geometry>
                    <cylinder radius = "${wheel_radius}" length = "${wheel_length}" /> 
                </geometry>
                <origin xyz = "0 0 0" rpy = "${pi/2} 0 0" />            
            </collision>

            <xacro:cylinder_inertia m = "1.0" r = "${2*wheel_radius}" 
                                              h = "${2*wheel_length}" 
                                              xyz = "0 0 0"
                                              rpy = "${pi/2} 0 0" />
        </link>
    </xacro:macro>

    <link name = "base_footprint" />

    <link name = "base_link">
        <visual>
            <geometry>
                <box size = "${base_width} ${base_length} ${base_height}" /> 
            </geometry>
            <origin xyz = "0 0 0" rpy = "0 0 0" />
            <material name = "cyan" />
        </visual>
        <collision>
            <geometry>
                <box size = "${base_width} ${base_length} ${base_height}" /> 
            </geometry>
            <origin xyz = "0 0 0" rpy = "0 0 0" />
        </collision>

        <xacro:box_inertia m = "5.0" l = "${2*base_length}" 
                                     w = "${2*base_width}" 
                                     h = "${2*base_height}" 
                                     xyz = "0 0 0"
                                     rpy = "0 0 0" />
    </link>

    <xacro:wheel_link prefix = "right_front" />
    <xacro:wheel_link prefix = "left_front" />

    <xacro:wheel_link prefix = "right_back" />
    <xacro:wheel_link prefix = "left_back" />

    <xacro:wheel_link prefix = "right_mid" />
    <xacro:wheel_link prefix = "left_mid" />

    

    <joint name = "base_joint" type = "fixed">
        <parent link = "base_footprint" />
        <child link  = "base_link" />
        <origin xyz = "0 0 ${(base_height / 2) + wheel_radius}" rpy = "0 0 0" />
    </joint>

    <joint name = "base_right_front_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link  = "right_front_wheel_link" />
        <origin xyz = "${(-(base_width / 2)) + wheel_radius} 
                       ${-((base_length / 2) + (wheel_length / 2))} 
                       ${-wheel_radius}" 
                       rpy = "0 0 0" />
        <axis xyz = "0 1 0" />
    </joint>

    <joint name = "base_left_front_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link  = "left_front_wheel_link" />
        <origin xyz = "${(-(base_width / 2)) + wheel_radius} 
                       ${(base_length / 2) + (wheel_length / 2)} 
                       ${-wheel_radius}" 
                       rpy = "0 0 0" />
        <axis xyz = "0 1 0" />
    </joint>

    <joint name = "base_left_back_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link  = "left_back_wheel_link" />
        <origin xyz = "${(+(base_width / 2)) - wheel_radius} 
                       ${(base_length / 2) + (wheel_length / 2)} 
                       ${-wheel_radius}" 
                       rpy = "0 0 0" />
        <axis xyz = "0 1 0" />
    </joint>

        <joint name = "base_right_back_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link  = "right_back_wheel_link" />
        <origin xyz = "${((base_width / 2)) - wheel_radius} 
                       ${-((base_length / 2) + (wheel_length / 2))} 
                       ${-wheel_radius}" 
                       rpy = "0 0 0" />
        <axis xyz = "0 1 0" />
    </joint>

    

        <joint name = "base_right_mid_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link  = "right_mid_wheel_link" />
        <origin xyz = "0
                       ${-((base_length / 2) + (wheel_length / 2))} 
                       ${-wheel_radius}" 
                       rpy = "0 0 0" />
        <axis xyz = "0 1 0" />
    </joint>

    <joint name = "base_left_mid_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link  = "left_mid_wheel_link" />
        <origin xyz = "0 
                       ${(base_length / 2) + (wheel_length / 2)} 
                       ${-wheel_radius}" 
                       rpy = "0 0 0" />
        <axis xyz = "0 1 0" />
    </joint>



</robot>   
